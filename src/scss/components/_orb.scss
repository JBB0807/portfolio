@use "../base/settings" as *;

.orb-tree {
  position: relative;
  display: block;
  height: 100%;
  width: 100%;
  padding: 1rem;
}

.orb-container {
  position: absolute;
  top: 25%;
  left: 50%;
  transform: translate(-50%, -50%);
  transform-origin: center;
  border-radius: 50%;
  transition: transform 0.5s ease-in-out, width 0.5s ease-in-out,
    height 0.5s ease-in-out, background-color 0.5s ease-in-out,
    /* or color if using text color */ opacity 0.5s ease-in-out,
    box-shadow 0.5s ease-in-out 0.25s, filter 0.5s ease-in-out;
}

.orbit {
  width: 100%;
  height: 100%;
  position: absolute;
  transition: transform 0.5s ease-in-out, width 0.5s ease-in-out,
    height 0.5s ease-in-out, background-color 0.5s ease-in-out,
    /* or color if using text color */ opacity 0.5s ease-in-out,
    filter 0.3s ease-in-out; // ðŸ‘ˆ animate filter
}

.orb-container svg {
  width: 100%;
  height: 100%;
  display: block;
}

.orbit:hover {
  cursor: pointer;
  filter: drop-shadow(0 0 10px rgba($orb-color-active, 0.7));
}

.orb-label {
  user-select: none;
  width: 100%;
  max-height: 90%;
  max-width: 90%;
  position: inherit;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 110%;
  text-align: center;
  color: $text-color-secondary;
  pointer-events: none; // ensures clicks go through to Orb if needed
  white-space: wrap;
  overflow: hidden;
}

.main-orb {
  width: 30vh;
  height: 30vh;
  color: $orb-color-active;
}

.category-orb,
.tech-orb {
  width: 12vh;
  height: 12vh;
  color: $orb-color-active;
  transform: translate(-50%, 50%);
}

.orbital-selections .orbit {
  --angle: calc(90deg + var(--i) * 30deg); /* 30Â° spacing */
  --radius: 30vh; /* distance from center */

  // width: 100px;
  // height: 100px;
  color: $orb-color-active;
  transform: rotate(var(--angle)) translate(var(--radius))
    rotate(calc(-1 * var(--angle)));
  border-radius: 50%;
  box-shadow: 0 0 30px 10px rgba($orb-color-active, 0.5);
}

.project-orb {
  opacity: 1;
  width: 18vh;
  height: 18vh;
  color: $orb-color-active;
  left: 0;
  transform: translate(calc(110% * (var(--i))), 230%);
}

.previous {
  opacity: 1;
  width: 15vh;
  height: 15vh;
  color: $orb-color-back;
  transform: translate(-200%, -70%);
  border-radius: 50%;
  box-shadow: 0 0 20px 5px $border-color-primary,
    0 0 60px 20px rgba($orb-color-back, 0.5);
}

.selected {
  width: 30vh;
  height: 30vh;
  color: $orb-color-selected;
  transform: translate(-50%, 0%);
  z-index: 1000;
  border-radius: 50%;
  box-shadow: 0 0 20px 10px $border-color-primary,
    0 0 60px 20px rgba($orb-color-selected, 0.5);
}

.hidden {
  opacity: 0;
  pointer-events: none;
}

@media (max-aspect-ratio: 3/4) {
  .orb-container {
    position: absolute;
    top: 25%;
    left: 50%;
    transform: translate(-50%, -70%);
  }
  .orb-tree {
    padding: 0.5rem;
    position: relative;
    display: block;
  }

  .orb-label {
    font-size: small;
  }

  .main-orb {
    height: 20vh;
    width: 20vh;
  }

  .category-orb,
  .tech-orb {
    height: 8vh;
    width: 8vh;
    transform: translate(-50%, 55%);
  }

  .orbital-selections .orbit {
    --radius: 20vh; /* distance from center */
  }

  .previous {
    height: 10vh;
    width: 10vh;
    transform: translate(-200%, -80%);
  }

  .selected {
    height: 20vh;
    width: 20vh;
    transform: translate(-50%, 0%);
  }

  .project-orb {
    width: 8vh;
    height: 8vh;
    left: 5%;
    color: $orb-color-active;
    transform: translate(calc(120% * (var(--i))), 300%);
  }
}

@media only screen and (orientation: landscape) and (min-aspect-ratio: 2) and (min-resolution: 150dpi) {
  .main-orb {
    transform: translate(-250%, -20%);
  }

  .category-orb,
  .tech-orb {
    transform: translate(-50%, 5%);
  }

  .selected {
    transform: translate(-50%, -20%);
  }

  .orbital-selections .orbit {
    --radius: 30vh; /* distance from center */
  }

  .previous {
    transform: translate(-250%, -70%);
  }

  .project-orb {
    left: 5%;
    color: $orb-color-active;
    transform: translate(calc(120% * (var(--i))), 150%);
  }
}
